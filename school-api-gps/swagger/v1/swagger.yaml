openapi: "3.0.3"
info:
  title: "API Centro Paula Sousa Fake"
  version: "1.0.0"
  description: >
    Documentação da API somente de leitura, que fornece dados de instituições, alunos,
    cursos, matrículas e estatísticas.
    ---
    **Autenticação:** A API utiliza Bearer Token. Você deve fornecer um token válido
    (um dos tokens da variável de ambiente VALID_TOKENS) no header "Authorization"
    no formato: "Bearer <token>".
servers:
  - url: "https://two025-1a-t13-es05-api2.onrender.com/api/v1"
    description: "Servidor de Produção"
  - url: "http://localhost:3000/api/v1"
    description: "Servidor de Desenvolvimento"
paths:
  /institutions:
    get:
      summary: "Lista todas as instituições"
      description: "Retorna uma lista de todas as instituições cadastradas."
      tags:
        - "Institutions"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Institution"
  /institutions/{id}:
    get:
      summary: "Exibe detalhes de uma instituição"
      description: "Retorna os detalhes de uma instituição específica."
      tags:
        - "Institutions"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID da instituição"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Institution"
        '404':
          description: "Instituição não encontrada"
  /institutions/{id}/students:
    get:
      summary: "Lista os alunos matriculados em uma instituição"
      description: "Retorna uma lista de alunos matriculados na instituição especificada."
      tags:
        - "Institutions"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID da instituição"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
  /students/{id}:
    get:
      summary: "Exibe detalhes de um aluno"
      description: "Retorna os detalhes de um aluno específico."
      tags:
        - "Students"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID do aluno"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        '404':
          description: "Aluno não encontrado"
  /students/{id}/enrollments:
    get:
      summary: "Lista as matrículas de um aluno"
      description: "Retorna todas as matrículas associadas a um aluno, incluindo detalhes da instituição e do curso."
      tags:
        - "Students"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID do aluno"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Enrollment"
  /courses:
    get:
      summary: "Lista todos os cursos"
      description: "Retorna uma lista de todos os cursos disponíveis."
      tags:
        - "Courses"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
  /courses/{id}:
    get:
      summary: "Exibe detalhes de um curso"
      description: "Retorna os detalhes de um curso específico."
      tags:
        - "Courses"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID do curso"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"
        '404':
          description: "Curso não encontrado"
  /courses/{id}/students:
    get:
      summary: "Lista os alunos matriculados em um curso"
      description: "Retorna uma lista de alunos matriculados no curso especificado."
      tags:
        - "Courses"
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: "ID do curso"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
  /stats:
    get:
      summary: "Obter estatísticas da API"
      description: "Retorna estatísticas gerais, incluindo total de alunos, matrículas, cursos e número de matrículas por instituição."
      tags:
        - "Stats"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_students:
                    type: integer
                  total_enrollments:
                    type: integer
                  total_courses:
                    type: integer
                  enrollments_per_institution:
                    type: object
components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      in: header
      name: Authorization
      description: >
        Insira seu token no formato: "Bearer <token>".
        Os tokens válidos são:
        g1-a83a3f053ef18ad16e5df0c94fe1b5affb,
        g2-3d18028b24bc73032aa60c8d39a305fbc3,
        g3-d72f4d0e90fce94208a9cc383c7e10ae7b,
        g4-25156486a1e8fdc1ed5e0d9f4b83c18362,
        g5-d07b7448e0e79b485cef47e88add553218,
        g6-4b0f41f4314f91b5061681049da58c9454
  schemas:
    Institution:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        students_count:
          type: integer
      required:
        - id
        - name
    Student:
      type: object
      properties:
        id:
          type: integer
        academic_id:
          type: string
        name:
          type: string
        email:
          type: string
        date_of_birth:
          type: string
          format: date
        contact_phone:
          type: string
      required:
        - id
        - academic_id
        - name
        - email
    Course:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        course_type:
          type: string
      required:
        - id
        - name
    Enrollment:
      type: object
      properties:
        id:
          type: integer
        shift:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
        institution_name:
          type: string
        course_name:
          type: string
        course_type:
          type: string
      required:
        - id
        - shift
